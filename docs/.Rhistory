y = matrix(d$kid_score, ncol = 1)
load("datos/kidiq.Rdata")
str(d)
y = matrix(d$kid_score, ncol = 1)
head(y)
n = nrow(d)
X = cbind(rep(1,n), d$mom_iq, d$mom_age)
head(X)
Xt_X = t(X) %*% X
Xt_y = t(X) %*% y
( B = solve(Xt_X) %*% Xt_y )
y_e = X %*% B
View(d)
# en primer lugar vamos a calcular las matrices de covarianzas con la función de R cov()
(Sxx = cov(d[c(3,5),c(3,5)]) )
(Sxy = S(d[c(3,5),1]) )
# en primer lugar vamos a calcular las matrices de covarianzas con la función de R cov()
(Sxx = cov(d[c(3,5),c(3,5)]) )
(Sxy = cov(d[c(3,5),1]) )
# en primer lugar vamos a calcular las matrices de covarianzas con la función de R cov()
(Sxx = cov(d[,c(1,3,5)]) )
(Sxy = cov(d[,c(1,3,5)]) )
(Ba = solve(Sxx) %*% Sxy)
# en primer lugar vamos a calcular las matrices de covarianzas con la función de R cov()
(S = cov(d[,c(1,3,5)]) )
(Sxx = S[2:3,2:3])
(Sxy = S[2:3,1] )
(Ba = solve(Sxx) %*% Sxy)
ya = matrix(d$kid_score - mean(d$kid_score), ncol = 1)
Xa = cbind(d$mom_iq - mean(d$mom_iq), d$mom_age - mean(d$mom_age)) # sin columna de unos!!!!
ya = matrix(d$kid_score - mean(d$kid_score), ncol = 1)
Xa = cbind(d$mom_iq - mean(d$mom_iq), d$mom_age - mean(d$mom_age)) # sin columna de unos!!!!
n = nrow(d)
1/(n-1) * t(Xa) %*% Xa
1/(n-1) * t(Xa) %*% ya
( b0 = mean(d$kid_score) - colMeans(d[,c(3,5)]) %*% Ba )
(SRC = sum(e^2))
load("datos/kidiq.Rdata")
str(d)
plot(d$mom_iq, d$kid_score)
y = matrix(d$kid_score, ncol = 1)
head(y)
n = nrow(d)
X = cbind(rep(1,n), d$mom_iq, d$mom_age)
head(X)
Xt_X = t(X) %*% X
Xt_y = t(X) %*% y
( B = solve(Xt_X) %*% Xt_y )
y_e = X %*% B
e = y - y_e
(SRC = sum(e^2))
sum(d$kid_score^2) - t(B) %*% (Xt_y
sum(d$kid_score^2) - t(B) %*% Xt_y
# varianza de y
(sy2 = S[1,1] )
(SRC = (n-1)*sy2 - (n-1)*t(Ba) %*% Sxy)
load("datos/kidiq.Rdata")
str(d)
plot(d$mom_iq, d$kid_score)
y = matrix(d$kid_score, ncol = 1)
head(y)
n = nrow(d)
X = cbind(rep(1,n), d$mom_iq, d$mom_age)
head(X)
Xt_X = t(X) %*% X
Xt_y = t(X) %*% y
( B = solve(Xt_X) %*% Xt_y )
y_e = X %*% B
e = y - y_e
(SRC = sum(e^2))
sum(d$kid_score^2) - t(B) %*% Xt_y
(STC = sum((y-mean(y))^2))
(R2 = 1 - SRC/STC)
(n-1)*var(y)
# en primer lugar vamos a calcular las matrices de covarianzas con la función de R cov()
(S = cov(d[,c(1,3,5)]) )
(Sxx = S[2:3,2:3])
(Sxy = S[2:3,1] )
(Ba = solve(Sxx) %*% Sxy)
ya = matrix(d$kid_score - mean(d$kid_score), ncol = 1)
Xa = cbind(d$mom_iq - mean(d$mom_iq), d$mom_age - mean(d$mom_age)) # sin columna de unos!!!!
n = nrow(d)
1/(n-1) * t(Xa) %*% Xa
1/(n-1) * t(Xa) %*% ya
( b0 = mean(d$kid_score) - colMeans(d[,c(3,5)]) %*% Ba )
# varianza de y
(sy2 = S[1,1] )
(SRC = (n-1)*sy2 - (n-1)*t(Ba) %*% Sxy)
Por último, para la suma de los residuos al cuadrado se tiene que cumplir que:
load("datos/kidiq.Rdata")
str(d)
secundaria_si = ifelse(d$mom_hs == "si", 1, 0)
plot(d$mom_iq, d$kid_score)
# modelo para secundaria_si = 0
abline(a = m$coef[1], b = m$coef[2], col = "blue")
load("datos/kidiq.Rdata")
str(d)
secundaria_si = ifelse(d$mom_hs == "si", 1, 0)
m = lm(kid_score ~ mom_iq + secundaria_si, data = d)
coef(m)
plot(d$mom_iq, d$kid_score)
# modelo para secundaria_si = 0
abline(a = m$coef[1], b = m$coef[2], col = "blue")
# modelo para secundaria_si = 1
abline(a = m$coef[1] + m$coef[3], b = m$coef[2], col = "red")
m = lm(kid_score ~ mom_iq + mom_hs, data = d)
summary(m)
levels(d$mom_hs)
contrasts(d$mom_hs)
levels(d$mom_work)
notrabaja_si = ifelse(d$mom_work == "notrabaja", 1, 0)
trabaja23_si = ifelse(d$mom_work == "trabaja23", 1, 0)
trabaja1_parcial_si = ifelse(d$mom_work == "trabaja1p", 1, 0)
trabaja1_completo_si = ifelse(d$mom_work == "trabaja1c", 1, 0)
m = lm(kid_score ~ mom_iq + mom_hs, data = d)
summary(m)
m = lm(kid_score ~ mom_iq + secundaria_no, data = d)
load("datos/kidiq.Rdata")
str(d)
secundaria_si = ifelse(d$mom_hs == "si", 1, 0)
m = lm(kid_score ~ mom_iq + secundaria_si, data = d)
coef(m)
plot(d$mom_iq, d$kid_score)
# modelo para secundaria_si = 0
abline(a = m$coef[1], b = m$coef[2], col = "blue")
# modelo para secundaria_si = 1
abline(a = m$coef[1] + m$coef[3], b = m$coef[2], col = "red")
m = lm(kid_score ~ mom_iq + mom_hs, data = d)
summary(m)
levels(d$mom_hs)
contrasts(d$mom_hs)
secundaria_no = ifelse(d$mom_hs == "no", 1, 0)
m = lm(kid_score ~ mom_iq + secundaria_no, data = d)
coef(m)
d$mom_hs = relevel(d$mom_hs, ref = "si")
levels(d$mom_hs)
d$mom_hs1 = relevel(d$mom_hs, ref = "si")
levels(d$mom_hs1)
contrasts(d$mom_hs1)
m = lm(kid_score ~ mom_iq + mom_hs1, data = d)
summary(m)
m = lm(kid_score ~ mom_iq + trabaja23_si + trabaja1p_si + trabaja1c_si, data = d)
load("datos/kidiq.Rdata")
str(d)
secundaria_si = ifelse(d$mom_hs == "si", 1, 0)
m = lm(kid_score ~ mom_iq + secundaria_si, data = d)
coef(m)
plot(d$mom_iq, d$kid_score)
# modelo para secundaria_si = 0
abline(a = m$coef[1], b = m$coef[2], col = "blue")
# modelo para secundaria_si = 1
abline(a = m$coef[1] + m$coef[3], b = m$coef[2], col = "red")
m = lm(kid_score ~ mom_iq + mom_hs, data = d)
summary(m)
levels(d$mom_hs)
contrasts(d$mom_hs)
secundaria_no = ifelse(d$mom_hs == "no", 1, 0)
m = lm(kid_score ~ mom_iq + secundaria_no, data = d)
coef(m)
levels(d$mom_hs)
contrasts(d$mom_hs)
d$mom_hs1 = relevel(d$mom_hs, ref = "si")
levels(d$mom_hs1)
contrasts(d$mom_hs1)
m = lm(kid_score ~ mom_iq + mom_hs1, data = d)
summary(m)
m = lm(kid_score ~ 0 + mom_iq + secundaria_si + secundaria_no, data = d)
summary(m)
m = lm(kid_score ~ 0 + mom_iq + mom_hs, data = d)
summary(m)
levels(d$mom_work)
notrabaja_si = ifelse(d$mom_work == "notrabaja", 1, 0)
trabaja23_si = ifelse(d$mom_work == "trabaja23", 1, 0)
trabaja1p_si = ifelse(d$mom_work == "trabaja1p", 1, 0)
trabaja1c_si = ifelse(d$mom_work == "trabaja1c", 1, 0)
m = lm(kid_score ~ mom_iq + trabaja23_si + trabaja1p_si + trabaja1c_si, data = d)
summary(m)
m = lm(kid_score ~ mom_iq + mom_work, data = d)
summary(m)
knitr::opts_chunk$set(echo = TRUE)
load("datos/kidiq.Rdata")
str(d)
knitr::opts_chunk$set(echo = TRUE)
load("datos/kidiq.Rdata")
load("datos/kidiq.Rdata")
str(d)
m1 = lm(kid_score ~ . - mom_work, data = d)
summary(m1)
# render the whole dir
files = dir()
for (ii in 1:length(files)){
file1 = substr(files[ii],nchar(files[ii])-2,nchar(files[ii]))
if (file1 == "Rmd"){
print(files[ii])
#rmarkdown::render(file1)
rmarkdown::render(input = files[ii], output_format = "html_document")
rmarkdown::render(input = files[ii], output_format = "pdf_document")
}
}
# render the whole dir
files = dir()
for (ii in 1:length(files)){
file1 = substr(files[ii],nchar(files[ii])-2,nchar(files[ii]))
if (file1 == "Rmd"){
print(files[ii])
#rmarkdown::render(file1)
rmarkdown::render(input = files[ii], output_format = "html_document")
rmarkdown::render(input = files[ii], output_format = "pdf_document")
}
}
# render the whole dir
files = dir()
for (ii in 1:length(files)){
file1 = substr(files[ii],nchar(files[ii])-2,nchar(files[ii]))
if (file1 == "Rmd"){
print(files[ii])
#rmarkdown::render(file1)
rmarkdown::render(input = files[ii], output_format = "html_document")
rmarkdown::render(input = files[ii], output_format = "pdf_document")
}
}
files[ii]
# render the whole dir
files = dir()
for (ii in 1:length(files)){
file1 = substr(files[ii],nchar(files[ii])-2,nchar(files[ii]))
if (file1 == "Rmd"){
print(files[ii])
#rmarkdown::render(file1)
rmarkdown::render(input = files[ii], output_format = "html_document")
rmarkdown::render(input = files[ii], output_format = "pdf_document")
}
}
